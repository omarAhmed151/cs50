#include <cs50.h>
#include <stdio.h>
#include <string.h>

// Max number of candidates
#define MAX 9

// Candidates have name and vote count
typedef struct
{
    string name;
    int votes;
}
candidate;

// Array of candidates
candidate candidates[MAX];

// Number of candidates
int candidate_count;

// Function prototypes
bool vote(string name , int c , string v[]);
void print_winner(void);

int main(int argc, string argv[])
{

    // Check for invalid usage
    if (argc < 2)
    {
        printf("Usage: plurality [candidate ...]\n");
        return 1;
    }

    // Populate array of candidates
    candidate_count = argc - 1;
    if (candidate_count > MAX)
    {
        printf("Maximum number of candidates is %i\n", MAX);
        return 2;
    }
    for (int i = 0; i < candidate_count; i++)
    {
        candidates[i].name = argv[i + 1];
        candidates[i].votes = 0;
    }

    int voter_count = get_int("Number of voters: ");
    string arr [MAX];  //array to calculate number of votes

    // Loop over all voters
    for (int i = 0; i < voter_count; i++)
    {
        string name = get_string("Vote: ");
        for(int j=0 ; j < candidate_count ; j++){
        if(strcmp(candidates[j].name , name) == 0){
            
            candidates[j].votes = candidates[j].votes + 1;
            
        }

        }

        // Check for invalid vote
        if (!vote(name , argc , argv))
        {
            printf("Invalid vote.\n");
        }
        
    // Display winner of election
    if( i == voter_count - 1){
    print_winner();
    }
    
}
}
// Update vote totals given a new vote
bool vote(string name , int c , string v[])
{
    for(int i=0;i < candidate_count ; i++){
        if(strcmp(candidates[i].name , name) == 0){
            return true;
        }else if(strcmp(candidates[i].name , name) != 0 && i == candidate_count - 1 ){
             return false;
        }
    }
    return 0 ;
}

// Print the winner (or winners) of the election
void print_winner(void)
{
     int maxvotes = 0;
    // find highest votes
    for (int i = 0; i < candidate_count; i++)
    {
        if (candidates[i].votes > maxvotes)
        {
            maxvotes = candidates[i].votes;
        }
    }
    // print winner
    for (int i = 0; i < candidate_count ; i++)
    {
        if (candidates[i].votes == maxvotes )
        {
            printf("%s\n", candidates[i].name);
        }
    }
    
    
//    another solution:
//     int x=1;
//     int y=0;
//     while(x <= candidate_count){
//     if(candidates[y].votes > candidates[x].votes ){
//         if(strcmp(candidates[x].name , candidates[candidate_count].name) == 0){
//             printf("winner: %s",candidates[y].name);
//         }
        
//     }else{
//             y++;
//             x = 1;
//         }
//     x++;
// }
    return ;
}
